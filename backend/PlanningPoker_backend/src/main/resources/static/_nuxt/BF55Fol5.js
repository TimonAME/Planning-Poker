import{ae as l,u as h}from"./CoGpfI4O.js";import"https://cdn.jsdelivr.net/npm/@stomp/stompjs@7.0.0/bundles/stomp.umd.min.js";import{u as t}from"./D1Vl9Jqs.js";const n=l("userstory",{state:()=>({userStories:[]}),actions:{addUserStory(s){this.userStories.push(s)},deleteUserStory(s){this.userStories.splice(s,1)},editUserStory(s,e){this.userStories.splice(s,1,e)},moveUserStory(s,e){const[r]=this.userStories.splice(s,1);this.userStories.splice(e,0,r)},searchUserStory(s){return this.userStories.filter(e=>e.title.toLowerCase().includes(s))}},persist:!0}),C=l("stompClient",{state:()=>({stompClient:null}),actions:{activateStompClient(s){this.stompClient=new StompJs.Client({brokerURL:"ws://localhost:8080/ws-endpoint"}),console.log("activatestompclient"),this.stompClient.onConnect=e=>{console.log("Connected:",e),this.stompClient.subscribe(`/topic/lobby/${s}`,r=>{console.log("Nachricht bekommen:------------------------------------------------");let o=JSON.parse(r.body);switch(console.log(o),o.type){case"lobbyJoinBroadCast":let y=function(){};console.log("someone joined"),console.log(o);const a=t(),c=void 0;a.addUser(o.user.userName,"not ready",!1,c);break;case"readyUpBroadcast":console.log("Ready"),console.log(o);const u=t().userList.find(i=>i.publicUserHash==o.publicUserHash);t().setUserStatus(u,"ready");break;case"lobbyStartBroadcast":console.log("Lobby started!"),h().push("/game");break;case"userStoryBroadcast":console.log("Userstory erstellt"),console.log(o);const p=n(),d={title:o.userStory.title,description:o.userStory.description,userStoryHash:o.userStoryHash,voted:!1,size:null};p.addUserStory(d);break;case"setCurrentUserStoryBroadcast":console.log(o),n();break;case"revokeReadyBroadcast":console.log(o);const S=t().userList.find(i=>i.publicUserHash==o.publicUserHash);t().setUserStatus(S,"not ready");break}})},this.stompClient.onStompError=e=>{console.error("Broker reported error:",e.headers.message),console.error("Additional details:",e.body)},this.stompClient.onWebSocketError=e=>{console.error("WebSocket error:",e)},this.stompClient.onDisconnect=e=>{console.log("Disconnected:",e)},this.stompClient.activate()},publishMessage(s,e){console.log("Trying to publish: "+s),this.stompClient.publish({destination:s,body:e})}},persist:!0});export{C as a,n as u};
